#!/bin/sh

set previewer ~/.config/lf/preview
set cleaner preview-image
# Basic Settings
set preview true
set drawbox true
set icons true
set ignorecase true
set sortby time
set reverse on

# Custom Functions
cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        *) echo "open it with enter" ;;
    esac
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd paste &{{
    set -- $(lf -remote load)
    mode="$1"
    shift
    case "$mode" in
		copy)
		    rsync -rltDv --ignore-existing --progress -- "$@" . |
            stdbuf -i0 -o0 -e0 tr '\r' '\n' |
            while IFS= read -r line; do
                lf -remote "send $id echo $line"
            done
            ;;
        move) mv -n -- "$@" .;;
    esac
    lf -remote "send load"
    lf -remote "send clear"
}}


cmd cp2phone ${{
	adb push "$f" /sdcard/fromlf
}}

cmd image2clipboard ${{
	xclip -selection clipboard -t image/png -i "$f"
}}

cmd setwallpaper %cp "$f" ~/.local/share/wallpaper && xwallpaper --zoom "$f"

# install font bindings
cmd installfont ${{
	cp $f/* ~/.local/share/fonts
	fc-cache -vf
}}

# Archive bindings
cmd unarchive ${{

  	case "$f" in
    	*.zip) unzip "$f" -d $(basename $f .zip);;
    	*.rar) unrar "$f" ;;
      	*.tar.gz) tar -xzvf "$f" ;;
      	*.tar.bz2) tar -xjvf "$f" ;;
      	*.tar) tar -xvf "$f" ;;
      	*) echo "Unsupported format" ;;
  	esac
}}

cmd zip %zip -r "$f" "$f"
cmd tar %tar cvf "$f.tar" "$f"
cmd targz %tar cvzf "$f.tar.gz" "$f"
cmd tarbz2 %tar cjvf "$f.tar.bz2" "$f"

# Trash cli
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    # extract the substring from start of string up to delimiter.
    # this is the first "element" of the string.
    file=${files%%;*}

    trash-put "$(basename "$file")"
    # if there's only one element left, set `files` to an empty string.
    # this causes us to exit this `while` loop.
    # else, we delete the first "element" of the string from files, and move onto the next.
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd clear_trash %trash-empty

cmd restore_trash ${{
  trash-restore
}}

# Remove default key bindings
map d
map p
map o
map i
map m 
map c
# File Openers
map oo $ xdg-open "$f" & 
map ov $$EDITOR "$f"

# Broot
cmd broot_jump ${{
  f=$(mktemp)
  res="$(broot --outcmd $f && cat $f | sed 's/cd //')"
  rm -f "$f"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

# Basics
map . set hidden!
map t toggle 
map x cut
map y copy
map p paste
map bg setwallpaper
# Broot Mappings
map f broot_jump

# Archive Mappings
map az zip
map ar rar
map at tar
map ag targz
map ab tarbz2
map au unarchive


# Trash Mappings
map dd trash
map tc clear_trash
map tr restore_trash

# Fast Navs
map gm cd /media
map gd cd ~/Downloads
map gp cd ~/projects
map gc cd ~/.config
map gl cd ~/.local
map gt cd /tmp
# Make
map mf mkfile
map md mkdir

# copy to X 
map ci image2clipboard
map cp cp2phone

# other
map ii $$PAGER "$f"
map if installfont


