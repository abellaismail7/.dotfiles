#!/bin/sh
# Handle by extension

draw() {
  ~/.config/lf/draw_img "$@"
  exit 1
}

hash() {
  printf '%s/.cache/lf/%s' "$HOME" \
    "$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
}

cache() {
  if [ -f "$1" ]; then
    draw "$@"
  fi
}

file="$1"
shift


case ${1##*.} in
    # Archive
    a|ace|alz|apk|arc|arj|bz|bz2|cab|cpio|deb|gz|iso|jar|lha|lz|lzh|lzma|lzo|\
    rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip|zst)
        bsdtar --list --file "$file" && exit ;;
    rar)
        unrar lt -p- -- "$file" && exit ;;
    7z)
        7z l -p -- "$file" && exit ;;

    # PDF
    pdf) # Convert pdf file to texts
		pdftoppm -jpeg -singlefile "$file" /tmp/lfthumb
		preview-image draw "/tmp/lfthumb.jpg" "$2" "$3" "$4" "$5" && exit 1 ;;

    # BitTorrent
    torrent)
        transmission-show -- "$file" && exit ;;

    # OpenDocument
    odt|ods|odp|sxw) # Preview as text conversion
        odt2txt "$file" && exit ;;

    # HTML
    htm|html|xhtml)
        # Preview as text conversion
        w3m -dump "$file" ||
        lynx -dump -- "$file" ||
        elinks -dump "$file" && exit ;;

    svg)
        convert -resize 200x200 "$file" /tmp/lfthumb.png
		preview-image draw "/tmp/lfthumb.png" "$2" "$3" "$4" "$5" && exit 1 ;;
    *) ;; # Go on to handle by mime type
esac

# Handle by mime types
case "$(file -Lb --mime-type -- "$file")" in
    # Text
    text/*|*/xml|*/csv|*/json)
        # try to detect the charactor encodeing
        enc=$(head -n20 "$file" | uchardet)
        head -n 100 "$file" |
        { if command -v highlight > /dev/null 2>&1; then
            highlight -O ansi --force
        else
            cat
        fi } |
        iconv -f "${enc:-UTF-8}" -t UTF-8 && exit ;;

    # Image
    image/*)
        orientation="$(identify -format '%[EXIF:Orientation]\n' -- "$file")"
        if [ -n "$orientation" ] && [ "$orientation" != 1 ]; then
            cache="$(hash "$file").jpg"
            cache "$cache" "$@"
            convert -- "$file" -auto-orient "$cache"
            draw "$cache" "$@"
        else
            draw "$file" "$@"
        fi
        ;;
	video/*)
        cache="$(hash "$file").jpg"
        cache "$cache" "$@"
        ffmpegthumbnailer -i "$file" -o "$cache" -s 0
        draw "$cache" "$@"
        ;;
    # Video and audio
    audio/*|application/octet-stream)
        mediainfo "$file" && exit ;;

    *) ;; # Go on to fall back
esac

file -Lb -- "$1" | fold -s -w "$width"
exit 0
